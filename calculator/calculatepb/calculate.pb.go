// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculate.proto

package calculatepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Calculate struct {
	FirstNumber          int64    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int64    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Calculate) Reset()         { *m = Calculate{} }
func (m *Calculate) String() string { return proto.CompactTextString(m) }
func (*Calculate) ProtoMessage()    {}
func (*Calculate) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d8b31321fcad8b1, []int{0}
}

func (m *Calculate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calculate.Unmarshal(m, b)
}
func (m *Calculate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calculate.Marshal(b, m, deterministic)
}
func (m *Calculate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calculate.Merge(m, src)
}
func (m *Calculate) XXX_Size() int {
	return xxx_messageInfo_Calculate.Size(m)
}
func (m *Calculate) XXX_DiscardUnknown() {
	xxx_messageInfo_Calculate.DiscardUnknown(m)
}

var xxx_messageInfo_Calculate proto.InternalMessageInfo

func (m *Calculate) GetFirstNumber() int64 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *Calculate) GetSecondNumber() int64 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type CalculateRequest struct {
	Calculate            *Calculate `protobuf:"bytes,1,opt,name=calculate,proto3" json:"calculate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CalculateRequest) Reset()         { *m = CalculateRequest{} }
func (m *CalculateRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateRequest) ProtoMessage()    {}
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d8b31321fcad8b1, []int{1}
}

func (m *CalculateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateRequest.Unmarshal(m, b)
}
func (m *CalculateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateRequest.Marshal(b, m, deterministic)
}
func (m *CalculateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateRequest.Merge(m, src)
}
func (m *CalculateRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateRequest.Size(m)
}
func (m *CalculateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateRequest proto.InternalMessageInfo

func (m *CalculateRequest) GetCalculate() *Calculate {
	if m != nil {
		return m.Calculate
	}
	return nil
}

type CalculateResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateResponse) Reset()         { *m = CalculateResponse{} }
func (m *CalculateResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateResponse) ProtoMessage()    {}
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d8b31321fcad8b1, []int{2}
}

func (m *CalculateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateResponse.Unmarshal(m, b)
}
func (m *CalculateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateResponse.Marshal(b, m, deterministic)
}
func (m *CalculateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateResponse.Merge(m, src)
}
func (m *CalculateResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateResponse.Size(m)
}
func (m *CalculateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateResponse proto.InternalMessageInfo

func (m *CalculateResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Calculate)(nil), "calculate.Calculate")
	proto.RegisterType((*CalculateRequest)(nil), "calculate.CalculateRequest")
	proto.RegisterType((*CalculateResponse)(nil), "calculate.CalculateResponse")
}

func init() {
	proto.RegisterFile("calculate.proto", fileDescriptor_1d8b31321fcad8b1)
}

var fileDescriptor_1d8b31321fcad8b1 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4e, 0xcc, 0x49,
	0x2e, 0xcd, 0x49, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x05, 0x73, 0x71, 0x3a, 0xc3, 0x38, 0x42, 0x8a, 0x5c, 0x3c, 0x69, 0x99, 0x45, 0xc5, 0x25, 0xf1,
	0x79, 0xa5, 0xb9, 0x49, 0xa9, 0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0xdc, 0x60, 0x31,
	0x3f, 0xb0, 0x90, 0x90, 0x32, 0x17, 0x6f, 0x71, 0x6a, 0x72, 0x7e, 0x5e, 0x0a, 0x4c, 0x0d, 0x13,
	0x58, 0x0d, 0x0f, 0x44, 0x10, 0xa2, 0x48, 0xc9, 0x8d, 0x4b, 0x00, 0x6e, 0x68, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x90, 0x11, 0x17, 0xc2, 0x56, 0xb0, 0xc1, 0xdc, 0x46, 0x22, 0x7a, 0x08,
	0x87, 0x21, 0xd4, 0x23, 0x39, 0x4e, 0x9b, 0x4b, 0x10, 0xc9, 0x9c, 0xe2, 0x82, 0xfc, 0xbc, 0xe2,
	0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0xf3, 0xa0, 0x3c, 0xa3,
	0x6b, 0x4c, 0x48, 0xb6, 0x06, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x79, 0x73, 0xf1, 0x20,
	0xc4, 0x4a, 0x73, 0x85, 0xa4, 0xb1, 0x5a, 0x09, 0x71, 0xa2, 0x94, 0x0c, 0x76, 0x49, 0x88, 0xbd,
	0x4a, 0x0c, 0x42, 0x81, 0x5c, 0x42, 0x48, 0x86, 0x25, 0x15, 0x97, 0x14, 0x25, 0x26, 0x97, 0x50,
	0x66, 0x64, 0x00, 0x92, 0x0f, 0x7d, 0x4b, 0x73, 0x4a, 0x32, 0x0b, 0x72, 0x2a, 0xa9, 0x67, 0xa2,
	0x4b, 0x66, 0x59, 0x66, 0x71, 0x66, 0x7e, 0x1e, 0x45, 0x26, 0x3a, 0xf1, 0x46, 0x71, 0xc3, 0x15,
	0x14, 0x24, 0x25, 0xb1, 0x81, 0xd3, 0x90, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x69, 0x02,
	0x69, 0x56, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculateServiceClient is the client API for CalculateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculateServiceClient interface {
	// Unary
	CalculateSum(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error)
	CalculateSubstract(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error)
	CalculateMultiply(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error)
	CalculateDivision(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error)
}

type calculateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculateServiceClient(cc grpc.ClientConnInterface) CalculateServiceClient {
	return &calculateServiceClient{cc}
}

func (c *calculateServiceClient) CalculateSum(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error) {
	out := new(CalculateResponse)
	err := c.cc.Invoke(ctx, "/calculate.CalculateService/CalculateSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) CalculateSubstract(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error) {
	out := new(CalculateResponse)
	err := c.cc.Invoke(ctx, "/calculate.CalculateService/CalculateSubstract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) CalculateMultiply(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error) {
	out := new(CalculateResponse)
	err := c.cc.Invoke(ctx, "/calculate.CalculateService/CalculateMultiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) CalculateDivision(ctx context.Context, in *CalculateRequest, opts ...grpc.CallOption) (*CalculateResponse, error) {
	out := new(CalculateResponse)
	err := c.cc.Invoke(ctx, "/calculate.CalculateService/CalculateDivision", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculateServiceServer is the server API for CalculateService service.
type CalculateServiceServer interface {
	// Unary
	CalculateSum(context.Context, *CalculateRequest) (*CalculateResponse, error)
	CalculateSubstract(context.Context, *CalculateRequest) (*CalculateResponse, error)
	CalculateMultiply(context.Context, *CalculateRequest) (*CalculateResponse, error)
	CalculateDivision(context.Context, *CalculateRequest) (*CalculateResponse, error)
}

// UnimplementedCalculateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculateServiceServer struct {
}

func (*UnimplementedCalculateServiceServer) CalculateSum(ctx context.Context, req *CalculateRequest) (*CalculateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateSum not implemented")
}
func (*UnimplementedCalculateServiceServer) CalculateSubstract(ctx context.Context, req *CalculateRequest) (*CalculateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateSubstract not implemented")
}
func (*UnimplementedCalculateServiceServer) CalculateMultiply(ctx context.Context, req *CalculateRequest) (*CalculateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateMultiply not implemented")
}
func (*UnimplementedCalculateServiceServer) CalculateDivision(ctx context.Context, req *CalculateRequest) (*CalculateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateDivision not implemented")
}

func RegisterCalculateServiceServer(s *grpc.Server, srv CalculateServiceServer) {
	s.RegisterService(&_CalculateService_serviceDesc, srv)
}

func _CalculateService_CalculateSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).CalculateSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculate.CalculateService/CalculateSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).CalculateSum(ctx, req.(*CalculateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_CalculateSubstract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).CalculateSubstract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculate.CalculateService/CalculateSubstract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).CalculateSubstract(ctx, req.(*CalculateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_CalculateMultiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).CalculateMultiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculate.CalculateService/CalculateMultiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).CalculateMultiply(ctx, req.(*CalculateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_CalculateDivision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).CalculateDivision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculate.CalculateService/CalculateDivision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).CalculateDivision(ctx, req.(*CalculateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculate.CalculateService",
	HandlerType: (*CalculateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalculateSum",
			Handler:    _CalculateService_CalculateSum_Handler,
		},
		{
			MethodName: "CalculateSubstract",
			Handler:    _CalculateService_CalculateSubstract_Handler,
		},
		{
			MethodName: "CalculateMultiply",
			Handler:    _CalculateService_CalculateMultiply_Handler,
		},
		{
			MethodName: "CalculateDivision",
			Handler:    _CalculateService_CalculateDivision_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculate.proto",
}
